!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACOUSTIC	identify.c	89;"	d	file:
ADV_PIO_MODES	identify.c	57;"	d	file:
ADV_PWR	identify.c	85;"	d	file:
ATAPI_DEV	identify.c	20;"	d	file:
ATA_DEV	identify.c	19;"	d	file:
ATA_OP_CHECKPOWERMODE1	hdparm.h	/^	ATA_OP_CHECKPOWERMODE1		= 0xe5,$/;"	e	enum:__anon2
ATA_OP_CHECKPOWERMODE2	hdparm.h	/^	ATA_OP_CHECKPOWERMODE2		= 0x98,$/;"	e	enum:__anon2
ATA_OP_DOORLOCK	hdparm.h	/^	ATA_OP_DOORLOCK			= 0xde,$/;"	e	enum:__anon2
ATA_OP_DOORUNLOCK	hdparm.h	/^	ATA_OP_DOORUNLOCK		= 0xdf,$/;"	e	enum:__anon2
ATA_OP_FLUSHCACHE	hdparm.h	/^	ATA_OP_FLUSHCACHE		= 0xe7,$/;"	e	enum:__anon2
ATA_OP_IDENTIFY	hdparm.h	/^	ATA_OP_IDENTIFY			= 0xec,$/;"	e	enum:__anon2
ATA_OP_PIDENTIFY	hdparm.h	/^	ATA_OP_PIDENTIFY		= 0xa1,$/;"	e	enum:__anon2
ATA_OP_SECURITY_DISABLE	hdparm.h	/^	ATA_OP_SECURITY_DISABLE		= 0xf6,$/;"	e	enum:__anon2
ATA_OP_SECURITY_ERASE_PREPARE	hdparm.h	/^	ATA_OP_SECURITY_ERASE_PREPARE	= 0xf3,$/;"	e	enum:__anon2
ATA_OP_SECURITY_ERASE_UNIT	hdparm.h	/^	ATA_OP_SECURITY_ERASE_UNIT	= 0xf4,$/;"	e	enum:__anon2
ATA_OP_SECURITY_FREEZE_LOCK	hdparm.h	/^	ATA_OP_SECURITY_FREEZE_LOCK	= 0xf5,$/;"	e	enum:__anon2
ATA_OP_SECURITY_SET_PASS	hdparm.h	/^	ATA_OP_SECURITY_SET_PASS	= 0xf1,$/;"	e	enum:__anon2
ATA_OP_SECURITY_UNLOCK	hdparm.h	/^	ATA_OP_SECURITY_UNLOCK		= 0xf2,$/;"	e	enum:__anon2
ATA_OP_SETFEATURES	hdparm.h	/^	ATA_OP_SETFEATURES		= 0xef,$/;"	e	enum:__anon2
ATA_OP_SETIDLE1	hdparm.h	/^	ATA_OP_SETIDLE1			= 0xe3,$/;"	e	enum:__anon2
ATA_OP_SETIDLE2	hdparm.h	/^	ATA_OP_SETIDLE2			= 0x97,$/;"	e	enum:__anon2
ATA_OP_SLEEPNOW1	hdparm.h	/^	ATA_OP_SLEEPNOW1		= 0xe5,$/;"	e	enum:__anon2
ATA_OP_SLEEPNOW2	hdparm.h	/^	ATA_OP_SLEEPNOW2		= 0x99,$/;"	e	enum:__anon2
ATA_OP_SMART	hdparm.h	/^	ATA_OP_SMART			= 0xb0,$/;"	e	enum:__anon2
ATA_OP_STANDBYNOW1	hdparm.h	/^	ATA_OP_STANDBYNOW1		= 0xe0,$/;"	e	enum:__anon2
ATA_OP_STANDBYNOW2	hdparm.h	/^	ATA_OP_STANDBYNOW2		= 0x94,$/;"	e	enum:__anon2
ATA_USING_LBA	sgio.c	36;"	d	file:
BUFFER_SIZE	io_test.c	22;"	d	file:
BUF_SIZE	identify.c	34;"	d	file:
BUF_TYPE	identify.c	33;"	d	file:
CAPAB_0	identify.c	42;"	d	file:
CAPAB_1	identify.c	43;"	d	file:
CAPACITY_LSB	identify.c	50;"	d	file:
CAPACITY_MSB	identify.c	51;"	d	file:
CBLID	identify.c	455;"	d	file:
CDROM	identify.c	135;"	d	file:
CDROM__SPEED	hdparm.h	/^	CDROM__SPEED		= 0x5322,$/;"	e	enum:__anon3
CDR_MAJOR	identify.c	66;"	d	file:
CDR_MINOR	identify.c	67;"	d	file:
CFA_PWR_MODE	identify.c	98;"	d	file:
CFA_SUPPORT_VAL	identify.c	124;"	d	file:
CFLAGS	Makefile	/^CFLAGS :=  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64   $/;"	m
CMDS_EN_0	identify.c	78;"	d	file:
CMDS_EN_1	identify.c	79;"	d	file:
CMDS_EN_2	identify.c	80;"	d	file:
CMDS_EN_3	identify.c	95;"	d	file:
CMDS_SUPP_0	identify.c	75;"	d	file:
CMDS_SUPP_1	identify.c	76;"	d	file:
CMDS_SUPP_2	identify.c	77;"	d	file:
CMDS_SUPP_3	identify.c	94;"	d	file:
CMDS_W82	identify.c	324;"	d	file:
CMDS_W83	identify.c	325;"	d	file:
CMDS_W84	identify.c	326;"	d	file:
CMD_Q_SUP	identify.c	213;"	d	file:
CONFIG	identify.c	26;"	d	file:
CSEL_VAL	identify.c	459;"	d	file:
DEPTH_BITS	identify.c	238;"	d	file:
DEV_DET	identify.c	457;"	d	file:
DISK_BLOCK_SIZE	io_test.h	5;"	d
DISK_FAIL	io_test.h	2;"	d
DISK_SELECTION	io_test.h	11;"	d
DISK_SUCCESS	io_test.h	1;"	d
DMA_IL_SUP	identify.c	212;"	d	file:
DMA_MODE	identify.c	45;"	d	file:
DMA_SUP	identify.c	211;"	d	file:
DMA_TIME_MIN	identify.c	59;"	d	file:
DMA_TIME_NORM	identify.c	60;"	d	file:
DRIVE_NOT_REMOVABLE	identify.c	122;"	d	file:
DRQ_3MS_VAL	identify.c	126;"	d	file:
DRQ_50US_VAL	identify.c	128;"	d	file:
DRQ_INTR_VAL	identify.c	127;"	d	file:
DRQ_RESPONSE_TIME	identify.c	125;"	d	file:
DWORD_IO	identify.c	41;"	d	file:
ENH_ERASE_TIME	identify.c	84;"	d	file:
ENOIOCTLCMD	io_test.c	16;"	d	file:
EQPT_TYPE	identify.c	132;"	d	file:
ERASE_BITS	identify.c	449;"	d	file:
ERASE_TIME	identify.c	83;"	d	file:
GEN_CONFIG	identify.c	24;"	d	file:
GIGA	io_test.h	3;"	d
HDIO_DRIVE_CMD	hdparm.h	/^	HDIO_DRIVE_CMD		= 0x031f,$/;"	e	enum:__anon3
HDIO_DRIVE_RESET	hdparm.h	/^	HDIO_DRIVE_RESET	= 0x031c,$/;"	e	enum:__anon3
HDIO_DRIVE_TASK	hdparm.h	/^	HDIO_DRIVE_TASK		= 0x031e,$/;"	e	enum:__anon3
HDIO_DRIVE_TASKFILE	hdparm.h	/^	HDIO_DRIVE_TASKFILE	= 0x031d,$/;"	e	enum:__anon3
HDIO_GETGEO	hdparm.h	/^	HDIO_GETGEO		= 0x0301,$/;"	e	enum:__anon3
HDIO_GETGEO_BIG	hdparm.h	/^	HDIO_GETGEO_BIG		= 0x0330,$/;"	e	enum:__anon3
HDIO_GET_32BIT	hdparm.h	/^	HDIO_GET_32BIT		= 0x0309,$/;"	e	enum:__anon3
HDIO_GET_ACOUSTIC	hdparm.h	/^	HDIO_GET_ACOUSTIC	= 0x030f,$/;"	e	enum:__anon3
HDIO_GET_BUSSTATE	hdparm.h	/^	HDIO_GET_BUSSTATE	= 0x031a,$/;"	e	enum:__anon3
HDIO_GET_DMA	hdparm.h	/^	HDIO_GET_DMA		= 0x030b,$/;"	e	enum:__anon3
HDIO_GET_IDENTITY	hdparm.h	/^	HDIO_GET_IDENTITY	= 0x030d,$/;"	e	enum:__anon3
HDIO_GET_KEEPSETTINGS	hdparm.h	/^	HDIO_GET_KEEPSETTINGS	= 0x0308,$/;"	e	enum:__anon3
HDIO_GET_MULTCOUNT	hdparm.h	/^	HDIO_GET_MULTCOUNT	= 0x0304,$/;"	e	enum:__anon3
HDIO_GET_NOWERR	hdparm.h	/^	HDIO_GET_NOWERR		= 0x030a,$/;"	e	enum:__anon3
HDIO_GET_QDMA	hdparm.h	/^	HDIO_GET_QDMA		= 0x0305,$/;"	e	enum:__anon3
HDIO_GET_UNMASKINTR	hdparm.h	/^	HDIO_GET_UNMASKINTR	= 0x0302,$/;"	e	enum:__anon3
HDIO_OBSOLETE_IDENTITY	hdparm.h	/^	HDIO_OBSOLETE_IDENTITY	= 0x0307,$/;"	e	enum:__anon3
HDIO_SCAN_HWIF	hdparm.h	/^	HDIO_SCAN_HWIF		= 0x0328,$/;"	e	enum:__anon3
HDIO_SET_32BIT	hdparm.h	/^	HDIO_SET_32BIT		= 0x0324,$/;"	e	enum:__anon3
HDIO_SET_ACOUSTIC	hdparm.h	/^	HDIO_SET_ACOUSTIC	= 0x032c,$/;"	e	enum:__anon3
HDIO_SET_BUSSTATE	hdparm.h	/^	HDIO_SET_BUSSTATE	= 0x032d,$/;"	e	enum:__anon3
HDIO_SET_DMA	hdparm.h	/^	HDIO_SET_DMA		= 0x0326,$/;"	e	enum:__anon3
HDIO_SET_KEEPSETTINGS	hdparm.h	/^	HDIO_SET_KEEPSETTINGS	= 0x0323,$/;"	e	enum:__anon3
HDIO_SET_MULTCOUNT	hdparm.h	/^	HDIO_SET_MULTCOUNT	= 0x0321,$/;"	e	enum:__anon3
HDIO_SET_NOWERR	hdparm.h	/^	HDIO_SET_NOWERR		= 0x0325,$/;"	e	enum:__anon3
HDIO_SET_PIO_MODE	hdparm.h	/^	HDIO_SET_PIO_MODE	= 0x0327,$/;"	e	enum:__anon3
HDIO_SET_QDMA	hdparm.h	/^	HDIO_SET_QDMA		= 0x032e,$/;"	e	enum:__anon3
HDIO_SET_UNMASKINTR	hdparm.h	/^	HDIO_SET_UNMASKINTR	= 0x0322,$/;"	e	enum:__anon3
HDIO_SET_WCACHE	hdparm.h	/^	HDIO_SET_WCACHE		= 0x032b,$/;"	e	enum:__anon3
HDIO_TRISTATE_HWIF	hdparm.h	/^	HDIO_TRISTATE_HWIF	= 0x031b,$/;"	e	enum:__anon3
HDIO_UNREGISTER_HWIF	hdparm.h	/^	HDIO_UNREGISTER_HWIF	= 0x032a,$/;"	e	enum:__anon3
HWRST_RSLT	identify.c	88;"	d	file:
INCOMPLETE	identify.c	123;"	d	file:
INTEGRITY	identify.c	106;"	d	file:
IORDY_OFF	identify.c	209;"	d	file:
IORDY_SUP	identify.c	208;"	d	file:
JUMPER_VAL	identify.c	458;"	d	file:
LBA_48_MSB	identify.c	92;"	d	file:
LBA_64_MSB	identify.c	93;"	d	file:
LBA_LSB	identify.c	90;"	d	file:
LBA_MID	identify.c	91;"	d	file:
LBA_SECTS_LSB	identify.c	53;"	d	file:
LBA_SECTS_MSB	identify.c	54;"	d	file:
LBA_SUP	identify.c	210;"	d	file:
LCYLS	identify.c	25;"	d	file:
LCYLS_CUR	identify.c	47;"	d	file:
LCYLS_MAX	identify.c	190;"	d	file:
LENGTH_FW_REV	identify.c	37;"	d	file:
LENGTH_MANUF	identify.c	102;"	d	file:
LENGTH_MEDIA	identify.c	100;"	d	file:
LENGTH_MODEL	identify.c	39;"	d	file:
LENGTH_SERIAL	identify.c	32;"	d	file:
LHEADS	identify.c	27;"	d	file:
LHEADS_CUR	identify.c	48;"	d	file:
LINUX	io_test.h	7;"	d
LOWER_MASK	io_test.c	54;"	d	file:
LSECTS	identify.c	30;"	d	file:
LSECTS_CUR	identify.c	49;"	d	file:
M	io_test.c	51;"	d	file:
MAJOR	identify.c	73;"	d	file:
MATRIX_A	io_test.c	52;"	d	file:
MAX_AMPS	identify.c	482;"	d	file:
MB	io_test.c	25;"	d	file:
MEDIA_REMOVABLE	identify.c	121;"	d	file:
MINOR	identify.c	74;"	d	file:
MINOR_MAX	identify.c	244;"	d	file:
MIN_STANDBY_TIMER	identify.c	218;"	d	file:
MODE	identify.c	221;"	d	file:
MODE_MAX	identify.c	229;"	d	file:
MULTIPLE_SETTING_VALID	identify.c	203;"	d	file:
MULTI_DMA	identify.c	56;"	d	file:
N	io_test.c	50;"	d	file:
NOT_ATA	identify.c	119;"	d	file:
NOT_ATAPI	identify.c	120;"	d	file:
NOVAL_0	identify.c	115;"	d	file:
NOVAL_1	identify.c	116;"	d	file:
NO_DEV	identify.c	18;"	d	file:
NUM_CMD_FEAT_STR	identify.c	328;"	d	file:
NUM_SECTORS	io_test.h	4;"	d
NUM_SECU_STR	identify.c	468;"	d	file:
OBJS	Makefile	/^OBJS=$(SRCS:.c=.o)$/;"	m
OK_W54_58	identify.c	226;"	d	file:
OK_W64_70	identify.c	225;"	d	file:
OK_W88	identify.c	224;"	d	file:
OPEN_FLAGS	io_test.c	32;"	d	file:
OPEN_FLAGS_STR	io_test.c	33;"	d	file:
OVLP_SUP	identify.c	214;"	d	file:
PAGE_SIZE	io_test.c	23;"	d	file:
PIO_FLOW	identify.c	63;"	d	file:
PIO_MODE	identify.c	44;"	d	file:
PIO_MODE_MAX	identify.c	235;"	d	file:
PIO_NO_FLOW	identify.c	62;"	d	file:
PIO_SUP	identify.c	234;"	d	file:
PKT_REL	identify.c	64;"	d	file:
PKT_SIZE_12_VAL	identify.c	130;"	d	file:
PKT_SIZE_16_VAL	identify.c	131;"	d	file:
PKT_SIZE_SUPPORTED	identify.c	129;"	d	file:
PSWD_CODE	identify.c	87;"	d	file:
PWRD_ID_VAL	identify.c	199;"	d	file:
PWRD_NID_VAL	identify.c	198;"	d	file:
PWR_MODE_OFF	identify.c	481;"	d	file:
PWR_MODE_REQ	identify.c	480;"	d	file:
QUEUE_DEPTH	identify.c	68;"	d	file:
RM_STAT	identify.c	96;"	d	file:
RM_STAT_BITS	identify.c	462;"	d	file:
RM_STAT_SUP	identify.c	463;"	d	file:
RND	io_test.c	47;"	d	file:
RST0	identify.c	456;"	d	file:
RW_LONG	identify.c	35;"	d	file:
SATA_CAP_0	identify.c	69;"	d	file:
SATA_EN_0	identify.c	72;"	d	file:
SATA_RESERVED_77	identify.c	70;"	d	file:
SATA_SUPP_0	identify.c	71;"	d	file:
SCT_SUPP	identify.c	103;"	d	file:
SECTOR_XFER	identify.c	202;"	d	file:
SECTOR_XFER_CUR	identify.c	52;"	d	file:
SECTOR_XFER_MAX	identify.c	40;"	d	file:
SECT_BYTES	identify.c	29;"	d	file:
SECU_ENABLED	identify.c	466;"	d	file:
SECU_LEVEL	identify.c	467;"	d	file:
SECU_STATUS	identify.c	97;"	d	file:
SG_ATA_16	sgio.c	25;"	d	file:
SG_ATA_16_LEN	sgio.c	26;"	d	file:
SG_ATA_LBA48	sgio.c	28;"	d	file:
SG_ATA_PROTO_DMA	sgio.c	32;"	d	file:
SG_ATA_PROTO_NON_DATA	sgio.c	29;"	d	file:
SG_ATA_PROTO_PIO_IN	sgio.c	30;"	d	file:
SG_ATA_PROTO_PIO_OUT	sgio.c	31;"	d	file:
SG_ATA_PROTO_UDMA_IN	sgio.c	33;"	d	file:
SG_ATA_PROTO_UDMA_OUT	sgio.c	34;"	d	file:
SG_CDB2_CHECK_COND	sgio.c	/^	SG_CDB2_CHECK_COND	= 1 << 5,$/;"	e	enum:__anon1	file:
SG_CDB2_TDIR_FROM_DEV	sgio.c	/^	SG_CDB2_TDIR_FROM_DEV	= 1 << 3,$/;"	e	enum:__anon1	file:
SG_CDB2_TDIR_TO_DEV	sgio.c	/^	SG_CDB2_TDIR_TO_DEV	= 0 << 3,$/;"	e	enum:__anon1	file:
SG_CDB2_TLEN_BYTES	sgio.c	/^	SG_CDB2_TLEN_BYTES	= 0 << 2,$/;"	e	enum:__anon1	file:
SG_CDB2_TLEN_FEAT	sgio.c	/^	SG_CDB2_TLEN_FEAT	= 1 << 0,$/;"	e	enum:__anon1	file:
SG_CDB2_TLEN_NODATA	sgio.c	/^	SG_CDB2_TLEN_NODATA	= 0 << 0,$/;"	e	enum:__anon1	file:
SG_CDB2_TLEN_NSECT	sgio.c	/^	SG_CDB2_TLEN_NSECT	= 2 << 0,$/;"	e	enum:__anon1	file:
SG_CDB2_TLEN_SECTORS	sgio.c	/^	SG_CDB2_TLEN_SECTORS	= 1 << 2,$/;"	e	enum:__anon1	file:
SG_CHECK_CONDITION	sgio.c	22;"	d	file:
SG_DRIVER_SENSE	sgio.c	23;"	d	file:
SG_READ	sgio.c	19;"	d	file:
SG_WRITE	sgio.c	20;"	d	file:
SHIFT_EQPT	identify.c	133;"	d	file:
SIG	identify.c	505;"	d	file:
SIG_VAL	identify.c	506;"	d	file:
SINGLE_DMA	identify.c	55;"	d	file:
SKIP_WRITE	io_test.h	6;"	d
SRCS	Makefile	/^SRCS   =  io_test.o disk_io.o sgio.o identify.o$/;"	m
START_FW_REV	identify.c	36;"	d	file:
START_MANUF	identify.c	101;"	d	file:
START_MEDIA	identify.c	99;"	d	file:
START_MODEL	identify.c	38;"	d	file:
START_SERIAL	identify.c	31;"	d	file:
STBY_ID_VAL	identify.c	197;"	d	file:
STBY_NID_VAL	identify.c	196;"	d	file:
STD_STBY	identify.c	206;"	d	file:
STR_SIZE	io_test.c	26;"	d	file:
SUPPORT_48_BIT	identify.c	327;"	d	file:
SVC_NBSY	identify.c	65;"	d	file:
SWRST_REQ	identify.c	215;"	d	file:
TARGET	Makefile	/^TARGET =  iotest$/;"	m
TASKFILE_CMD_REQ_IN	hdparm.h	/^	TASKFILE_CMD_REQ_IN	= 2,	\/* ide: IDE_DRIVE_TASK_IN *\/$/;"	e	enum:__anon4
TASKFILE_CMD_REQ_NODATA	hdparm.h	/^	TASKFILE_CMD_REQ_NODATA	= 0,	\/* ide: IDE_DRIVE_TASK_NO_DATA *\/$/;"	e	enum:__anon4
TASKFILE_CMD_REQ_OUT	hdparm.h	/^	TASKFILE_CMD_REQ_OUT	= 3,	\/* ide: IDE_DRIVE_TASK_OUT *\/$/;"	e	enum:__anon4
TASKFILE_XFER_METHOD_NONE	hdparm.h	/^	TASKFILE_XFER_METHOD_NONE	= 0,	\/* ide: TASKFILE_IN *\/$/;"	e	enum:__anon4
TASKFILE_XFER_METHOD_PIO_IN	hdparm.h	/^	TASKFILE_XFER_METHOD_PIO_IN	= 1,	\/* ide: TASKFILE_IN *\/$/;"	e	enum:__anon4
TASKFILE_XFER_METHOD_PIO_OUT	hdparm.h	/^	TASKFILE_XFER_METHOD_PIO_OUT	= 4,	\/* ide: TASKFILE_OUT *\/$/;"	e	enum:__anon4
TEMPERING_MASK_B	io_test.c	57;"	d	file:
TEMPERING_MASK_C	io_test.c	58;"	d	file:
TEMPERING_SHIFT_L	io_test.c	62;"	d	file:
TEMPERING_SHIFT_S	io_test.c	60;"	d	file:
TEMPERING_SHIFT_T	io_test.c	61;"	d	file:
TEMPERING_SHIFT_U	io_test.c	59;"	d	file:
TEST_OS	io_test.h	9;"	d
TRACK_BYTES	identify.c	28;"	d	file:
TRANSPORT_MAJOR	identify.c	104;"	d	file:
TRANSPORT_MINOR	identify.c	105;"	d	file:
ULTRA_DMA	identify.c	81;"	d	file:
UPPER_MASK	io_test.c	53;"	d	file:
VALID	identify.c	112;"	d	file:
VALID_VAL	identify.c	113;"	d	file:
VALID_W160	identify.c	479;"	d	file:
WHATS_VALID	identify.c	46;"	d	file:
WINDOWS	io_test.h	8;"	d
__USE_XOPEN	identify.c	10;"	d	file:
__attribute__	hdparm.h	6;"	d
__s16	io_test.h	/^typedef short                   __s16;  $/;"	t
__s32	io_test.h	/^typedef int                     __s32;  $/;"	t
__s64	io_test.h	/^typedef long long					__s64;$/;"	t
__s8	io_test.h	/^typedef char                    __s8;   $/;"	t
__u16	io_test.h	/^typedef unsigned short          __u16; $/;"	t
__u32	io_test.h	/^typedef unsigned int            __u32; $/;"	t
__u64	io_test.h	/^typedef unsigned long long			__u64;$/;"	t
__u8	io_test.h	/^typedef unsigned char           __u8;  $/;"	t
actual_ver	identify.c	/^const char actual_ver[MINOR_MAX+2] = { $/;"	v
allocate_aligned_buffer	io_test.c	/^void *allocate_aligned_buffer(size_t size)$/;"	f
ata1_cfg_str	identify.c	/^const char *ata1_cfg_str[] = {			\/* word 0 in ATA-1 mode *\/$/;"	v
ata_lba_regs	hdparm.h	/^struct ata_lba_regs {$/;"	s
ata_tf	hdparm.h	/^struct ata_tf {$/;"	s
bad_sense	sgio.c	/^static int bad_sense (unsigned char *sb, int len)$/;"	f	file:
cap_sata0_str	identify.c	/^static const char *cap_sata0_str[16] = { $/;"	v	file:
cmd_req	hdparm.h	/^	int			cmd_req;$/;"	m	struct:hdio_taskfile
command	hdparm.h	/^	__u8			command;$/;"	m	struct:ata_tf
command	hdparm.h	/^	__u8	command;$/;"	m	struct:taskfile_regs
command	hdparm.h	/^	unsigned command		: 1;$/;"	m	struct:reg_flags
cylinders	hdparm.h	/^       unsigned int	cylinders;$/;"	m	struct:local_hd_big_geometry
cylinders	hdparm.h	/^      unsigned short	cylinders;$/;"	m	struct:hd_geometry
data	hdparm.h	/^	__u8	data;$/;"	m	struct:taskfile_regs
data	hdparm.h	/^	char			data[0];$/;"	m	struct:hdio_taskfile
data	hdparm.h	/^	unsigned data			: 1;$/;"	m	struct:reg_flags
dev	hdparm.h	/^	__u8			dev;$/;"	m	struct:ata_tf
dev	hdparm.h	/^	__u8	dev;$/;"	m	struct:taskfile_regs
dev	hdparm.h	/^	unsigned dev			: 1;$/;"	m	struct:reg_flags
disk_close	disk_io.c	/^void disk_close(){$/;"	f
disk_open	disk_io.c	/^int disk_open(const char *dev,int flag){$/;"	f
do_drive_cmd	sgio.c	/^int do_drive_cmd (int fd, unsigned char *args)$/;"	f
do_taskfile_cmd	sgio.c	/^int do_taskfile_cmd (int fd, struct hdio_taskfile *r, unsigned int timeout_secs)$/;"	f
dump_bytes	sgio.c	/^static void dump_bytes (const char *prefix, unsigned char *p, int len)$/;"	f	file:
error	hdparm.h	/^	__u8			error;$/;"	m	struct:ata_tf
fd	disk_io.c	/^int fd;$/;"	v
feat	hdparm.h	/^	__u8	feat;$/;"	m	struct:ata_lba_regs
feat	hdparm.h	/^	__u8	feat;$/;"	m	struct:taskfile_regs
feat	hdparm.h	/^	unsigned feat			: 1;$/;"	m	struct:reg_flags
feat_3_str	identify.c	/^static const char *feat_3_str[16] = { $/;"	v	file:
feat_sata0_str	identify.c	/^static const char *feat_sata0_str[16] = {$/;"	v	file:
feat_sct_str	identify.c	/^static const char *feat_sct_str[16] = {$/;"	v	file:
feat_word82_str	identify.c	/^static const char *feat_word82_str[16] = { $/;"	v	file:
feat_word83_str	identify.c	/^static const char *feat_word83_str[16] = { $/;"	v	file:
feat_word84_str	identify.c	/^static const char *feat_word84_str[16] = { $/;"	v	file:
flush_buffer_cache	io_test.c	/^void flush_buffer_cache (int fd)$/;"	f
genrand	io_test.c	/^genrand()$/;"	f
gettimeofday	io_test.h	16;"	d
hd_geometry	hdparm.h	/^struct hd_geometry {$/;"	s
hdio_taskfile	hdparm.h	/^struct hdio_taskfile {$/;"	s
heads	hdparm.h	/^       unsigned char	heads;$/;"	m	struct:local_hd_big_geometry
heads	hdparm.h	/^      unsigned char	heads;$/;"	m	struct:hd_geometry
hob	hdparm.h	/^	struct ata_lba_regs	hob;$/;"	m	struct:ata_tf	typeref:struct:ata_tf::ata_lba_regs
hob	hdparm.h	/^	struct reg_flags	hob;$/;"	m	struct:taskfile_flags	typeref:struct:taskfile_flags::reg_flags
hob	hdparm.h	/^	struct taskfile_regs	hob;$/;"	m	struct:hdio_taskfile	typeref:struct:hdio_taskfile::taskfile_regs
identify	identify.c	/^void identify (__u16 *id_supplied)$/;"	f
in_bytes	hdparm.h	/^	unsigned long		in_bytes;$/;"	m	struct:hdio_taskfile
in_flags	hdparm.h	/^	struct taskfile_flags	in_flags;$/;"	m	struct:hdio_taskfile	typeref:struct:hdio_taskfile::taskfile_flags
io_read	disk_io.c	/^int io_read(char *buf, __u32 req_size, __s32 offset, struct timeval *tv_result){$/;"	f
io_write	disk_io.c	/^int io_write(char *buf, __u32 req_size, __s32 offset, struct timeval *tv_result){$/;"	f
is_lba48	hdparm.h	/^	__u8			is_lba48;$/;"	m	struct:ata_tf
issue_req	io_test.c	/^int issue_req(int is_rw, int is_rand, int req_size, int part_size, $/;"	f
lbah	hdparm.h	/^	__u8	lbah;$/;"	m	struct:ata_lba_regs
lbah	hdparm.h	/^	__u8	lbah;$/;"	m	struct:taskfile_regs
lbah	hdparm.h	/^	unsigned lbah			: 1;$/;"	m	struct:reg_flags
lbal	hdparm.h	/^	__u8	lbal;$/;"	m	struct:ata_lba_regs
lbal	hdparm.h	/^	__u8	lbal;$/;"	m	struct:taskfile_regs
lbal	hdparm.h	/^	unsigned lbal			: 1;$/;"	m	struct:reg_flags
lbam	hdparm.h	/^	__u8	lbam;$/;"	m	struct:ata_lba_regs
lbam	hdparm.h	/^	__u8	lbam;$/;"	m	struct:taskfile_regs
lbam	hdparm.h	/^	unsigned lbam			: 1;$/;"	m	struct:reg_flags
lob	hdparm.h	/^	struct ata_lba_regs	lob;$/;"	m	struct:ata_tf	typeref:struct:ata_tf::ata_lba_regs
lob	hdparm.h	/^	struct reg_flags	lob;$/;"	m	struct:taskfile_flags	typeref:struct:taskfile_flags::reg_flags
lob	hdparm.h	/^	struct taskfile_regs	lob;$/;"	m	struct:hdio_taskfile	typeref:struct:hdio_taskfile::taskfile_regs
local_hd_big_geometry	hdparm.h	/^struct local_hd_big_geometry {$/;"	s
lseek64	io_test.h	15;"	d
lsgenrand	io_test.c	/^lsgenrand(seed_array)$/;"	f
main	io_test.c	/^int main(int argc, char **argv){$/;"	f
min_ata_std	identify.c	/^static __u16 min_ata_std (__u16 major)$/;"	f	file:
minor_str	identify.c	/^const char *minor_str[MINOR_MAX+2] = {			\/* word 81 value: *\/$/;"	v
mode_loop	identify.c	/^__u8 mode_loop(__u16 mode_sup, __u16 mode_sel, int cc, __u8 *have_mode) {$/;"	f
mt	io_test.c	/^static unsigned long mt[N]; \/* the array for the state vector  *\/$/;"	v	file:
mti	io_test.c	/^static int mti=N+1; \/* mti==N+1 means mt[N] is not initialized *\/$/;"	v	file:
nsect	hdparm.h	/^	__u8	nsect;$/;"	m	struct:ata_lba_regs
nsect	hdparm.h	/^	__u8	nsect;$/;"	m	struct:taskfile_regs
nsect	hdparm.h	/^	unsigned nsect			: 1;$/;"	m	struct:reg_flags
open_flags	io_test.c	/^	static int open_flags = O_RDWR;$/;"	v	file:
open_flags	io_test.c	/^static int open_flags = OPEN_FLAGS;$/;"	v	file:
out_bytes	hdparm.h	/^	unsigned long		out_bytes;$/;"	m	struct:hdio_taskfile
out_flags	hdparm.h	/^	struct taskfile_flags	out_flags;$/;"	m	struct:hdio_taskfile	typeref:struct:hdio_taskfile::taskfile_flags
pkt_str	identify.c	/^const char *pkt_str[] = {$/;"	v
print_ascii	identify.c	/^void print_ascii(__u16 *p, __u8 length) {$/;"	f
print_features	identify.c	/^static void print_features (__u16 supported, __u16 enabled, const char *names[])$/;"	f	file:
print_transport_type	identify.c	/^static int print_transport_type(__u16 val[])$/;"	f	file:
reg_flags	hdparm.h	/^struct reg_flags {$/;"	s
sectors	hdparm.h	/^       unsigned char	sectors;$/;"	m	struct:local_hd_big_geometry
sectors	hdparm.h	/^      unsigned char	sectors;$/;"	m	struct:hd_geometry
secu_str	identify.c	/^const char *secu_str[] = {$/;"	v
sg16	sgio.c	/^int sg16 (int fd, int rw, struct ata_tf *tf,$/;"	f
sgenrand	io_test.c	/^sgenrand(seed)$/;"	f
start	hdparm.h	/^       unsigned long	start;$/;"	m	struct:local_hd_big_geometry
start	hdparm.h	/^      unsigned long	start;$/;"	m	struct:hd_geometry
start_io_test	io_test.c	/^int start_io_test(int is_rw, int is_rand, int part_size, int max_req_size){$/;"	f
status	hdparm.h	/^	__u8			status;$/;"	m	struct:ata_tf
sum_time	io_test.c	/^void sum_time(struct timeval *t1,struct timeval *t2)$/;"	f
taskfile_flags	hdparm.h	/^struct taskfile_flags {$/;"	s
taskfile_regs	hdparm.h	/^struct taskfile_regs {$/;"	s
tf_init	sgio.c	/^void tf_init (struct ata_tf *tf, __u8 ata_op, __u64 lba, unsigned int nsect)$/;"	f
tf_to_lba	sgio.c	/^__u64 tf_to_lba (struct ata_tf *tf)$/;"	f
timeval_subtract	io_test.c	/^int timeval_subtract (result, x, y)$/;"	f
tv_to_sec	io_test.c	/^float tv_to_sec(struct timeval *tv){$/;"	f
unknown	identify.c	/^static const char unknown[8] = "obsolete";$/;"	v	file:
unknown	identify.c	332;"	d	file:
usage_help	io_test.c	/^void usage_help(){$/;"	f
verbose	disk_io.c	/^int verbose;$/;"	v
xfer_method	hdparm.h	/^	int			xfer_method;$/;"	m	struct:hdio_taskfile
